[Code Looks Like a Chain](https://dzone.com/articles/code-looks-like-a-chain-1)
#你看那代码,好像一条链哎
就如星爷多年前说的那样"你看那代码,好像一条链哎".什么?他没说过吗,或许我记错了.你应该已经猜到了,这篇文章,我们来讨论一下责任链设计模式.这个模式并不流行,至少在 *Gang of Four*定义的模式中是这样.但现代依赖注入框架让我们可以用巧妙的新奇的方式去实现这个模式.我们来看看.
##介绍
声明:这种模式并没有新东西.我的一个同事刚刚前几天使用过,我也曾用过很多次.这篇文章的灵感来源于我最近遇到的问题,我们下面来说说,我之前也没有意识到这个问题可以用这种模式来解决.

##传统模式
责任链模式是一种 *行为设计模式*.它首次在 *Gang of Four*写的 *Design Patterns*这本书中提及.模式的目的是:
>避免请求的发送者与接收者耦合,为多个对象提供处理请求的机会.将接收对象串联成链,请求在链上传递,直到被一个对象处理.

类的关系图如下所示:
![](https://dzone.com/storage/temp/3623109-chain-of-responsibility-class-diagram.gif)

