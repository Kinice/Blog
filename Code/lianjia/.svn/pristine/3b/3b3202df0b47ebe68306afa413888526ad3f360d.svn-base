package me.snohwere.main;

import java.io.IOException;
import java.net.MalformedURLException;
import java.text.ParseException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;
import com.gargoylesoftware.htmlunit.ProxyConfig;
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.html.HtmlPage;
import com.gargoylesoftware.htmlunit.util.Cookie;
import com.jfinal.plugin.activerecord.ActiveRecordPlugin;
import com.jfinal.plugin.c3p0.C3p0Plugin;

import me.snohwere.model.Area;
import me.snohwere.model.Block;
import me.snohwere.queue.MyQueue;
import me.snohwere.task.BlockDetailTask;
import me.snohwere.util.Util;

/**
 * 简单测试用HTTP请求
 * @author STH
 * @date 2016年8月25日
 */
public class TestWeb {
    public static String getHtml(Element element) {
        if (element != null) {
            return element.html();
        } else {
            return "";
        }
    }

    public static String getHtml(Elements elements) {
        if (elements != null && !elements.isEmpty()) {
            return elements.get(0).html();
        } else {
            return "";
        }
    }

    public static void main(String args[]) {
        // 数据库连接
        C3p0Plugin c3p0Plugin = new C3p0Plugin(
            "jdbc:mysql://127.0.0.1/lianjia?useUnicode=true", "root", "qwer");
        c3p0Plugin.start();
        ActiveRecordPlugin arp = new ActiveRecordPlugin(c3p0Plugin);
        arp.addMapping("block", Block.class);
        arp.addMapping("area", Area.class);
        arp.start();
        
        WebClient client = new WebClient();
        // 设置webClient的相关参数
        client.getOptions().setActiveXNative(false);
        client.getOptions().setCssEnabled(false);
        client.getOptions().setJavaScriptEnabled(false);
        client.getJavaScriptEngine().shutdown();
        client.getOptions().setTimeout(10000);
        //proxyConfig.setProxyPort(1080);
        //proxyConfig.setProxyHost("114.35.74.8");
        client.addRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8");
        client.addRequestHeader("Accept-Encoding", "gzip, deflate, sdch");
        client.addRequestHeader("Accept-Language", "zh-CN,zh;q=0.8,en;q=0.6");
        client.addRequestHeader("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6");
        client.addRequestHeader("Connection", "keep-alive");
        client.addRequestHeader("Upgrade-Insecure-Requests", "1");
        client.addRequestHeader("Referer", "http://bj.lianjia.com/xiaoqu/1111027380051/");
        client.getCookieManager().addCookie(new Cookie(".lianjia.com","lianjia_uuid", "225953d1c48e64bfdb59a13d0089569a"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","lianjia_ssid", "f35099c5-3e2f-4ece-a81c-305d881af012"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","lianjia_token", "2.00252378c45c289cec348e51f530529747"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","sample_traffic_test", "test_50"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_jzqa", "1.4020732957968235000.1450784039.1450784039.1450784039.1"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","miyue_hide", "%20index%20"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","Hm_lvt_678d9c31c57be1c528ad7f62e5123d56", "1473345551"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","Hm_lpvt_678d9c31c57be1c528ad7f62e5123d56", "1473345551"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","Hm_lvt_efa595b768cc9dc7d7f9823368e795f1", "1473345552"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","Hm_lpvt_efa595b768cc9dc7d7f9823368e795f1", "1473345552"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","all-lj", "0a26bbdedef5bd9e71c728e50ba283a3"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_gat", "1"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_gat_past", "1"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_gat_global", "1"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_gat_new_global", "1"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_gat_dianpu_agent", "1"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_smt_uid", "56793526.15dd4532"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","CNZZDATA1253477573", "381594779-1458312303-null%7C1473346453"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","CNZZDATA1254525948", "212634324-1458309326-null%7C1473343458"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","CNZZDATA1255633284", "514015329-1458312593-null%7C1473344465"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","CNZZDATA1255604082", "603645467-1458313323-null%7C1473347244"));
            client.getCookieManager().addCookie(new Cookie(".lianjia.com","_ga", "GA1.2.647455279.1450784038"));
         
        int areaId = 1;
        int pageNum = 0;
        Block block = Block.dao.findFirst("select * from block order by id desc limit 1");
        if (block != null) {
            areaId = block.getInt("areaId");
            pageNum = block.getInt("pageNum");
        }
        // 模拟浏览器打开一个目标网址
        while(areaId<=306){
            Area area = Area.dao.findById(areaId);
            while(pageNum < (area.getInt("pages") - 1) / 30 + 1){
                pageNum++;
                try {
                    blockPages(client,  "http://bj.lianjia.com/xiaoqu/"+ area.getStr("place") + "/pg" + pageNum + "/", areaId, pageNum);
                } catch (FailingHttpStatusCodeException | ParseException | IOException e) {
                    e.printStackTrace();
                }
            }
            areaId++;
            pageNum = 0;
        }
      /*  try {
            //url = "http://bj.lianjia.com/xiaoqu/";
            //url = "http://bj.lianjia.com/xiaoqu/dongcheng/";
            //url = "http://bj.lianjia.com/xiaoqu/andingmen/pg1/";
            url = "http://bj.lianjia.com/xiaoqu/1111027379462/";
            HtmlPage page = client.getPage(url);
            Document document = Jsoup.parse(page.asXml());
            //
            System.out.println(url.split("/")[4]);
           // blockDetail(document);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println(url);
        }*/
    }

    private static void area(Document doc) {
        Element table = doc.getElementsByAttributeValue("data-role", "ershoufang")
            .get(0);
        Elements urls = table.getElementsByTag("a");
        for (int i = 1; i < urls.size(); i++) {
            String code = urls.get(i).attr("href").split("/")[2];
            String name = urls.get(i).html();
            System.out.println(code + "---" + name);
        }
    }

    private static void place(Document doc) {
        Element table = doc.getElementsByAttributeValue("data-role", "ershoufang")
            .get(0).child(1);
        Elements urls = table.getElementsByTag("a");
        for (int i = 1; i < urls.size(); i++) {
            String code = urls.get(i).attr("href").split("/")[2];
            String name = urls.get(i).html();
            System.out.println(code + "---" + name);
        }
    }

    private static void blockList(Document doc) {
        Elements elements = doc.select(".total>span");
        int total = Integer.parseInt(getHtml(elements));
        System.out.println(total);

        System.out.println((total - 1) / 30 + 1);
        //每页30
        //如果有下一页
        /* Element next = doc.getElementsByClass("on").get(0);
        if (next.nextElementSibling()!=null) {
            System.out.println("has next");
        }*/
    }

    private static void blockPages(WebClient client,String url,int areaId,int pageNum) throws FailingHttpStatusCodeException, MalformedURLException, ParseException, IOException {
        client.addRequestHeader("User-Agent", Util.getRandomAgent());
        HtmlPage page = client.getPage(url);
        Document doc = Jsoup.parse(page.asXml());
        Elements divs = doc.select(".title>a");
        if(divs.size()==0) return;
        for (Element div : divs) {
            //String url = div.attr("href");
            blockDetail(client,div.attr("href"),areaId,pageNum);
        }
    }

    private static void blockDetail(WebClient client,String url,int areaId,int pageNum) throws ParseException, FailingHttpStatusCodeException, MalformedURLException, IOException {
        client.addRequestHeader("User-Agent", Util.getRandomAgent());
        HtmlPage page = client.getPage(url);
        Document doc = Jsoup.parse(page.asXml());
        Block block = new Block();
        block.set("areaId", areaId);
        block.set("pageNum", pageNum);
        block.set("code", url.split("/")[4]);
        //区域信息
        Elements elements = doc.select(".l-txt>a");
        block.set("area", elements.get(2).html());
        block.set("place", elements.get(3).html());
        block.set("name", elements.get(4).html());
        block.set("price", getHtml(doc.getElementsByClass("xiaoquUnitPrice")));
        elements = doc.getElementsByClass("xiaoquInfoItem");
        String others = "";
        for (Element element : elements) {
            switch (element.child(0).html()) {
            case "建筑年代":
                block.set("year", element.child(1).html());
                break;
            case "建筑类型":
                block.set("type", element.child(1).html());
                break;
            case "物业费用":
                block.set("charge", element.child(1).html());
                break;
            case "物业公司":
                block.set("company", element.child(1).html());
                break;
            case "开发商":
                block.set("developer", element.child(1).html());
                break;
            case "小区概况":
                block.set("info", element.child(1).html().replaceAll("&nbsp;", " "));
                break;
            case "楼栋总数":
                block.set("building", element.child(1).html());
                break;
            case "房屋总数":
                block.set("house", element.child(1).html());
                break;
            case "附近门店":
                block.set("near", element.child(1).html()
                    .replaceAll("<[\\s\\S]*?>", "").replaceAll("&nbsp;", " "));
                break;
            default:
                others += others + element.child(0).html() + ","
                    + element.child(1).html();
                break;
            }
        }
        block.set("others", others);

        //匹配坐标
        Pattern r = Pattern
            .compile("resblockPosition:'([0-9]{3}\\.[0-9]{6},[0-9]{2}\\.[0-9]{6})");
        Matcher m = r.matcher(doc.html());
        if (m.find()) {
            block.set("position", m.group(1));
        }
        block.save();
    }
}
